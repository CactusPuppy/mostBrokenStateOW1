import "../main.ostw";

void setupBrigitte() playervar "[heroes/brigitte.ostw] Setup Brigitte"
{
  SetMaxHealth(EventPlayer(), 41.6666666667);
  SetHealingDealt(EventPlayer(), 1);
  AddHealthPoolToPlayer(EventPlayer(), HealthType.Health, 50, true);
}

void cleanupBrigitte() playervar "[heroes/brigitte.ostw] Cleanup Brigitte"
{
  SetHealingDealt(EventPlayer(), 100);
}

rule: "[heroes/brigitte.ostw] When Brig's shield bash connects, buff it"
Event.OnDamageDealt
if (effectiveHero == Hero.Brigitte)
if (IsFiringSecondary())
if (EventAbility() == Button.PrimaryFire)
{
  Damage(Victim(), Attacker(), 45);
  WaitUntil(HasStatus(Victim(), Status.Stunned), 0.064);
  ClearStatus(Victim(), Status.Stunned);
  SetStatus(Victim(), Attacker(), Status.Stunned, 1);
}

playervar Any brigOverheal;

rule: "[heroes/brigitte.ostw] Only allow one charge of Repair Pack"
Event.OngoingPlayer
if (effectiveHero == Hero.Brigitte)
if (AbilityCharge(EventPlayer(), Button.Ability2) < 3)
{
  SetAbility2Enabled(EventPlayer(), false);
  WaitUntil(effectiveHero != Hero.Brigitte || AbilityCharge(EventPlayer(), Button.Ability2) == 3, 6);
  SetAbility2Enabled(EventPlayer(), true);
}

rule: "[heroes/brigitte.ostw] Instant heal repair pack"
Event.OnHealingTaken
if (Healer().effectiveHero == Hero.Brigitte)
if (EventAbility() == Button.Ability2)
{
  if (MaxHealth(Healee()) - Health(Healee()) < 150) {
    AddHealthPoolToPlayer(Healee(), HealthType.Armor, Min(
      150 - (MaxHealth(Healee()) - Health(Healee())),
      75
    ), false, false);
    brigOverheal = LastCreatedHealthPool();
  }
  Heal(Healee(), Healer(), 150);
  Wait(6, WaitBehavior.IgnoreCondition);
  RemoveHealthPoolFromPlayer(brigOverheal);
}

playervar Player inspiringPlayer;

rule: "[heroes/brigitte.ostw] Flag inspired players to be healed"
Event.OnDamageDealt
if (effectiveHero == Hero.Brigitte)
if (EventAbility() != null)
if (IsFiringSecondary() == false)
{
  PlayersWithinRadius(EyePosition(), 20, TeamOf(), RadiusLOS.SurfacesAndEnemyBarriers).FilteredArray(player => IsAlive(player)).inspiringPlayer = EventPlayer();
  Wait(1.5, WaitBehavior.IgnoreCondition);
}

playervar Any inspireHoT;

rule: "[heroes/brigitte.ostw] Heal inspired players"
Event.OngoingPlayer

if (inspiringPlayer != null)
{
  if (inspireHoT != null) {
    StopHealOverTime(inspireHoT);
  }
  inspireHoT = StartHealOverTime(EventPlayer(), inspiringPlayer, 5, 16);
  inspiringPlayer = null;
}
